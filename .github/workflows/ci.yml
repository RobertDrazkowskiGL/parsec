name: Continuous Integration

on: [push, pull_request]

jobs:
  all-providers:
    name: Various tests targeting a Parsec image with all providers included
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh all

  mbed-crypto-provider:
    name: Integration tests using Mbed Crypto provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh mbed-crypto

  pkcs11-provider:
    name: Integration tests using PKCS 11 provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        # Not running stress tests because they fail, presumably because of the same issue as #264
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh pkcs11 --no-stress-test

  tpm-provider:
    name: Integration tests using TPM provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh tpm

  trusted-service-provider:
    name: Integration tests using Cypto Trusted Service provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh trusted-service

  links:
    name: Check links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Link Checker
        uses: peter-evans/link-checker@v1
        with:
          args: -v -r *.md
      - name: Fail if there were link errors
        run: exit ${{ steps.lc.outputs.exit_code }}
