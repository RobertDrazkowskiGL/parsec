name: Continuous Integration

on: [push, pull_request, workflow_dispatch]

jobs:
  all-providers:
    name: Various tests targeting a Parsec image with all providers included
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh all

  mbed-crypto-provider:
    name: Integration tests using Mbed Crypto provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh mbed-crypto

  pkcs11-provider:
    name: Integration tests using PKCS 11 provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        # Not running stress tests because they fail, presumably because of the same issue as #264
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh pkcs11 --no-stress-test

  tpm-provider:
    name: Integration tests using TPM provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh tpm

  trusted-service-provider:
    name: Integration tests using Cypto Trusted Service provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh trusted-service

  cryptoauthlib-provider:
    name: Integration tests using CryptoAuthentication Library provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run the container to execute the test script
        # Not running stress tests because rust-cryptoauthlib test-interface does not support required calls
        run: docker run -v $(pwd):/tmp/parsec -w /tmp/parsec ghcr.io/parallaxsecond/parsec-service-test-all /tmp/parsec/ci.sh cryptoauthlib --no-stress-test

  cross-compilation:
    # Currently only the Mbed Crypto and PKCS 11 providers are tested as the other ones need to cross-compile other libraries.
    name: Cross-compile Parsec to various targets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: armv7-unknown-linux-gnueabihf
        run: |
          rustup target add armv7-unknown-linux-gnueabihf
          sudo apt install -y gcc-multilib
          sudo apt install -y gcc-arm-linux-gnueabihf
          cargo build --features "pkcs11-provider, mbed-crypto-provider, all-authenticators" --target armv7-unknown-linux-gnueabihf
      - name: aarch64-unknown-linux-gnu
        run: |
          rustup target add aarch64-unknown-linux-gnu
          sudo apt install -y gcc-aarch64-linux-gnu
          cargo build --features "pkcs11-provider, mbed-crypto-provider, all-authenticators" --target aarch64-unknown-linux-gnu
      - name: i686-unknown-linux-gnu
        run: |
          sudo apt install -y gcc-multilib libc6-dev-i386
          rustup target add i686-unknown-linux-gnu
          cargo build --features "pkcs11-provider, mbed-crypto-provider, all-authenticators" --target i686-unknown-linux-gnu

  links:
    name: Check links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Link Checker
        uses: peter-evans/link-checker@v1
        with:
          args: -v -r *.md
      - name: Fail if there were link errors
        run: exit ${{ steps.lc.outputs.exit_code }}
